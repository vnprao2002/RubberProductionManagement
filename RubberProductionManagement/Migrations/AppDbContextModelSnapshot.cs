// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RubberProductionManagement.Data;

#nullable disable

namespace RubberProductionManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RubberProductionManagement.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Changes")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("RecordId")
                        .HasColumnType("longtext");

                    b.Property<string>("TableName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.DailyProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AreaWorked")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<double>("Production")
                        .HasColumnType("double");

                    b.Property<string>("Quality")
                        .HasColumnType("longtext");

                    b.Property<int>("TappingTimes")
                        .HasColumnType("int");

                    b.Property<int>("TreesTapped")
                        .HasColumnType("int");

                    b.Property<string>("Weather")
                        .HasColumnType("longtext");

                    b.Property<int>("WorkAssignmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkAssignmentId");

                    b.ToTable("DailyProductions");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<double>("TotalArea")
                        .HasColumnType("double");

                    b.Property<int>("TotalTrees")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.PriceTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double>("MaxYield")
                        .HasColumnType("double");

                    b.Property<double>("MinYield")
                        .HasColumnType("double");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("PriceTables");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.RubberLot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("LotCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LotName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RubberLots");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<double>("TotalArea")
                        .HasColumnType("double");

                    b.Property<double>("TotalProduction")
                        .HasColumnType("double");

                    b.Property<double>("TotalSalary")
                        .HasColumnType("double");

                    b.Property<int>("WorkSessionId")
                        .HasColumnType("int");

                    b.Property<double>("Yield")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("WorkSessionId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.WorkAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("AssignedArea")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<double>("PlannedProduction")
                        .HasColumnType("double");

                    b.Property<int>("RubberLotId")
                        .HasColumnType("int");

                    b.Property<int>("TappingTimes")
                        .HasColumnType("int");

                    b.Property<int>("WorkSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RubberLotId");

                    b.HasIndex("WorkSessionId");

                    b.ToTable("WorkAssignments");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.WorkSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SessionCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WorkSessions");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.DailyProduction", b =>
                {
                    b.HasOne("RubberProductionManagement.Models.WorkAssignment", "WorkAssignment")
                        .WithMany("DailyProductions")
                        .HasForeignKey("WorkAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkAssignment");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.Employee", b =>
                {
                    b.HasOne("RubberProductionManagement.Models.Team", "Team")
                        .WithMany("Employees")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.Salary", b =>
                {
                    b.HasOne("RubberProductionManagement.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RubberProductionManagement.Models.WorkSession", "WorkSession")
                        .WithMany()
                        .HasForeignKey("WorkSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("WorkSession");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.WorkAssignment", b =>
                {
                    b.HasOne("RubberProductionManagement.Models.Employee", "Employee")
                        .WithMany("WorkAssignments")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("RubberProductionManagement.Models.RubberLot", "RubberLot")
                        .WithMany("WorkAssignments")
                        .HasForeignKey("RubberLotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RubberProductionManagement.Models.WorkSession", "WorkSession")
                        .WithMany("WorkAssignments")
                        .HasForeignKey("WorkSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("RubberLot");

                    b.Navigation("WorkSession");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.Employee", b =>
                {
                    b.Navigation("WorkAssignments");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.RubberLot", b =>
                {
                    b.Navigation("WorkAssignments");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.Team", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.WorkAssignment", b =>
                {
                    b.Navigation("DailyProductions");
                });

            modelBuilder.Entity("RubberProductionManagement.Models.WorkSession", b =>
                {
                    b.Navigation("WorkAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
